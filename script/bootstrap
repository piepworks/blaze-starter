#!/bin/sh

# Get the name of the current folder.
raw_folder=${PWD##*/}
# Replace hypehens with underscores.
project_folder=${raw_folder//-/_}

# Create a virtual environment and get things installed.
python3 -m venv --prompt . .venv
.venv/bin/pip install -U pip setuptools wheel
source .venv/bin/activate
python -m pip install pip-tools
pip-compile --resolver=backtracking
python -m pip install -r requirements.txt

cp example.env .env

# Name the Django project with the same name as our base folder.
django-admin startproject $project_folder .

# Create a "core" app.
cd $project_folder
../manage.py startapp core
cd ..

# Delete an extraneous file.
rm $project_folder/core/apps.py

# Add some new files.
cp self-destruct/models.py $project_folder/core/
cp self-destruct/admin.py $project_folder/core/

python manage.py makemigrations
python manage.py migrate
python manage.py createsuperuser

# Set up pre-commit
pre-commit install

next_steps="
**Next steps:**
\n
\n- Run \`git add . && git commit -m 'Install django-starter.'\`
\n- Generate a secret key: \`script/generate-django-key\`.
\n- Put the key in your \`.env\` file as \`SECRET_KEY\`.
\n\n
In \`${project_folder}/settings.py\`:
\n
\n- Add \`\"${project_folder}.core\",\` to the top of your \`INSTALLED_APPS\`.
\n- Add \`AUTH_USER_MODEL = \"core.User\"\` right above \`AUTH_PASSWORD_VALIDATORS = [\`.
\n\n
**To work on things:**
\n
\n- \`script/start\`
"

if command -v gum &> /dev/null
then
  echo $next_steps | gum format
else
  echo $next_steps
fi

# Delete our starter stuff?
# rm -rf self-destruct/
